{"version":3,"sources":["Task.js","TaskDAO.js","TaskRender.js","ActionManager.js","ModalFrame.js","TaskService.js","index.js"],"names":["Task","text","isCheck","id","Date","now","JSON","stringify","json","taskJSON","parse","TaskDAO","task","tasksOfStorage","window","localStorage","getItem","setItem","task_id","removeItem","fromJSON","tasks","i","length","key","push","clear","TaskResder","Array","isArray","renderedTasks","drawTask","taskTemlate","ActionManager","elem","service","addEventListener","onClick","bind","openAddModal","closeModal","addTask","target","openUpdateModal","updateTask","checkTask","openDeleteAllItemsModal","clearTaskList","openDeleteItemModal","deleteTask","event","action","dataset","buttonAction","ModalFrame","modal","option","modalElem","document","createElement","classList","add","insertAdjacentHTML","body","button","append","create","open","remove","destroy","querySelector","TaskService","taskRender","TaskRender","taskDAO","modalFrame","actionManager","drawAllTasks","tasksHomeElement","getElementById","getAllTasks","sort","a","b","renderTasks","querySelectorAll","forEach","x","taskElem","closest","getTask","value","taskId","close","checked","openDeleteAllItems","openDeleteItem","console","log","removeTask","taskService","start"],"mappings":";;AMAA;;;;AAEA,IAAIoG,WAAW,GAAG,IAAI7B,oBAAJ,EAAlB;ALFA,AIAA,ACGA6B,WAAW,CAACC,KAAZ;;ADFA;;AACA;;AACA,IFHqBpE,ACAAqB,AJAAtD;AGCjB,ACCA,AJAA,gBAAYC,IAAZ,EAAkBC,EIAJ,CDDFgC,IAAZ,AHCA,EGDkBC,AHCShC,EAA3B,EAA+B,GGD/B,EAA2B;AAAA,ACCb,AJAiB,AKEnC;;AFFQ,ACCA,AJAA,ICDaQ,KEARuB,ACCAqB,AJAAtD,IGDL,AHCA,CIAA,EDDYiC,AHCAjC,IGDZ,AHCA;AGAA,ACCH,AJAG,SGDKkC,AHCAjC,OGDL,AHCA,GGDeiC,AHCAjC,OGDf,AHCA;AGAAgC,AHCC/B,IGDD+B,AHCC/B,AELYwB,EFKb,EGDI,CAACS,AHCE,KAAKjC,EAAL,GAAUA,EAAjB,GAAqB,CGDrB,CAAsB,GHCIA,EAAL,EGDrB,CHC+BC,CGDA,GHCI,CAACC,CGDAgC,EHCL,EAA/B,GGD+B,CAAaC,IAAb,CAAkB,IAAlB,CAA/B;AACH,AHCA;;2BIAMkB,QAAQ;AACX,UAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;AACAF,MAAAA,SAAS,CAACG,SAAV,CDDE,ACCkBC,EHJhBjD,CGIJ,CAAwB,CJKjB,GCTG,GGIV;ADAA,ACCA6C,AJKA,ACTA,IICac,EDGbd,IHJI7C,CEGCuB,EHME7B,CCTP,CGIS,CAACwD,AHJA,CDSC,CGNX,AHMYvD,CGNCgC,QHMN,CAAe,GGNtB,CHMO,CAAP,CILA,CAA6B,YAA7B,yWAQMiB,MAAM,CAACO,IARb,6GAWUP,MAAM,CAACQ,MAXjB;ADAH,ACkBGN,AJZH,ACTO,AIER,MDmBIA,MHrBQ7C,EGqBA,CAACkD,IAAT,CAAcE,KCnBJ,CDmBV,AHrBsB,CGqBDR,EHrBI3C,GCJjBO,GDIuB,CGqB/B,AHrBgCN,GCJjB,SDIU,CAAoBC,OAApB,CAA4BJ,IAAI,CAACT,EAAjC,CAArB;AGsBJ,AFzBA,AGKU,UHLNkB,CEyBCkC,IFzBI,CEyBT,GAAaE,AFzBA7B,KAAK,CAACC,GEyBnB,IFzBa,CAAcR,KAAd,CAAb,EAAmC;AE0BtC,AHtBO,ACHA,YDGI,ACHAS,CDGCjB,YCHY,EDGjB,CCHoB,CDGC,CCHrB;ADIIC,AICR,SAAK0D,CJDG1D,MAAM,CAACC,EICf,GAAkB,IAAI0D,GLDVjE,ACAJ,CAAoBS,GEGnB,EHHS,ECAV,CAA4BL,IAAI,CAACT,EAAjC,AICU,EJD2BS,AIC7C,IJDQ;AEIR,AHHA,ACAQ,ACN2B,AGOnC,SAAK8D,CLDDjE,CGGC0B,KEFL,CJDe,CEGf,AHHY,CGGCK,AEFE,ELDAlC,ACAP,EICWK,ELDA,CAACD,GGGpB,EHHe,CAAWF,IAAX,CAAf,EKCe,EAAf,UHLqBa,KAFc;ACUtC,AHHG,ACAK,ACP8B,AGQnC,SAAKsD,ILDE,IAAI3E,EKCX,ELDO,CAASS,AKCE,IAAI6C,ILDE,CAACrD,IIsBd,AJtBJ,EAAwBQ,QAAQ,AKCrB,CLDsBP,CKCxC,MLDO,EAA0CO,QAAQ,CAACN,EAAnD,CAAP;AIuBA,AJtBH,ACAI,AICJ,UDqBOqD,MAAM,GAAG;AACTO,AF/B+B,QE+B/BA,IAAI,EAAE,+DADG;AAETC,AHvBJ,ACPI,QE8BAA,KHvBG,CGuBG,EAAE,EHvBZ,YEGM,gCDVsB;ACW5B,ACiBa,AHpBhB,ACR+B,OE4B5B,IDjBK7B,KDXQvB,ECWb,CAAa6B,CDXe,MCW5B;AAEH,ACmBG,AF/BQX,WE+BHoC,CF/BGpC,KE+BR,CAAY0B,MAAZ,CF/BqB,GGQjB,CHRqB,KAAKzB,QAAL,CAAcnB,IAAd,IAAsB,IAAvC;AEgCR,AF/BK,AGQL,WDuBKuD,ACvBAS,IDuBL,SCvBA,GAAqB,IAAI3C,sBAAJ,CAAkByB,QAAQ,CAACK,IAA3B,EAAiC,IAAjC,CAArB;ADwBH,AFpCsC,AGanC,WAAKW,OAAL,CAAahD,KAAb,OJAOR,SAAS;AAChB,ACdmC,AGcnC,UJAIA,CIAC2D,MJAL,EAAa,IIAb,IFGGnC,QAAQ;AACX,AFHI,ACf+B,AGetC,WFGQP,CFHGtB,MEGR,CAAa8B,OFHS,GAAG7B,KEGzB,CAA6B4B,AFHE,CAAC3B,KEGhC,OFHyB,CAAoBC,OAApB,CAA4BE,OAA5B,CAArB;AEIP,ADnBsC,oCEsCvBN,MAAM;AAClB,AHvBI,AChB+B,UEuC/B4C,EHvBI3C,IGuBE,GAAG,OHvBT,EAAoB;AGwBpBkD,AHvBIjD,QGuBJiD,EHvBIjD,EGuBA,IHvBM,CAACC,YAAP,CAAoBI,KIAjB,KJAH,CAA+BD,OAA/B,iDGuB6EN,IAAI,CAACX,IAAlF,QADK;AAET+D,AHvBI,ACbJ,AGaJ,QDuBIA,ECvBAc,IDuBM,CFpCChD,EDaI,IAAP,KIAY,EHbhB,CGamB4B,EFGhBhB,MEHwB,CAACqC,CFGjB,aEHQ,CAAwB,OAAxB,CAAvB,2CDuB4FnE,IAAI,CAACT,EAAvF;ADnBV,ACiBa,AHpBR,ACbJ,AGaD,ODoBA,GCpBIkB,CFGCc,IEHI,GFGT,AEHY,CFGCS,IEHI8B,MFGjB,CAAwBhC,AEHZ,CAAasC,KFGzB,MEHY,EAAZ;AFIH,ACoBG,AHvBC,ACZJ,AGYG3D,MAAAA,KDuBK6C,ACvBA,CAACe,IAAN,CDuBA,ACvBW,CDuBCzB,MAAZ,GCvBY0B,CAAD,EAAIC,CAAJ;ADwBX,ACxBW,WDwBNhB,IAAL,ACxBqBe,CAAC,CAAC/E,EAAF,GAAOgF,CAAC,CAAChF,EAAnB;ADyBd,AHxBG,AIDW,OAAX,MJCO,KAAP;AACH,AIDG,UAAI2B,aAAa,GFIfY,AEJkB,GHXf9B,EGWoB4D,GFIf,CDfC,MGWS,CAAgBY,WAAhB,CAA4B/D,KAA5B,CAApB;AFKA,ADfA,AGWAqC,MAAAA,IHXI9C,CCeCuB,GDfL,AGWQ,CAACkD,CHXC,ECeV,CAAaxC,SAAb,CAAuBH,EEJvB,CAA0B,GFI1B,IEJA,EAAmC4C,OAAnC,CAA2C,UAACC,CAAD;AFK9C,ADfO,AGUuC,YHVnCvD,GGU0CuD,CAAC,CAACnB,MHVjC,AGU+B,EAAP,gBD2B1B,KFrCiBxD,IAAI,CAACT,EAApB,wIACwES,IAAI,CAACV,OAAN,GAAgB,SAAhB,GAA2B,EADlG,8EAEgCU,IAAI,CAACX,IAFrC,yOAAf;AEsCJ,AFhCI,AGIuC,OAA3C,GD4BIuD,KFhCOxB,CEgCD,GAAG,OFhCT,EDOAd,SAAS;AG0BT6C,AHzBJ,ACPC,AGIDe,MAAAA,ED4BIf,EHzBA7C,EGyBI,EAAE,GHzBV,EAAa,GIHG,CAAC4C,kBAAjB,CAAoC,YAApC,EAAkDhC,MD2BrC,OC3Bb;AD6BIkC,AHzBA,ACPP,AGIA,QD4BOA,IHzBInD,EGyBE,EAAE,UHzBU,GAAGC,EEElB,IFFwB,CAACC,YAAP,CAAoBC,OAApB,CAA4BE,OAA5B,CAArB;AEGJ,ACoBa,OAAb,IDpBKiB,OAAL,CAAaW,uBAAb;AACH,ACuBG,AH1BI,WG0BCoB,CH1BGrD,KG0BR,CAAY2C,MAAZ,EH1BI,EAAoB;AG2BxB,AH1BQ,WG0BHW,IAAL,EH1BenE,cAAKoB,KIHRsB,GJGG,CAAc7B,IIHT,UJGL,CAAP;AG4BX,AH3BQ,AIHL,UAAI2E,QAAQ,GAAG9C,MAAM,CAAC+C,OAAP,CAAe,OAAf,CAAf;AJIC,AIHD,UAAIvE,OAAO,GAAGsE,QAAQ,CAACrF,EAAvB,KFKY;AACZ,AELA,UAAIS,CFKCuB,GELG,GAAG,CFKX,CAAaY,GELG2B,OAAL,CAAagB,EFKxB,KELW,CAAqBxE,OAArB,CAAX;AFOH,AFJG,AIFA,WAAKyD,EJEE,IAAP,IIFA,CAAgBhC,aD6BLzB,EC7BX,CAAgCN,IAAhC,ED6BoB;AACpB,AH3BH,AIFA,UD6BO4C,MAAM,GAAG;AACTO,QAAAA,IAAI,EAAE,gDADG;AAETC,QAAAA,MAAM,cDxBPtB,QAAQ,mECwBiFxB,OAAlF;ADvBV,ACqBa,OAAb,IDrBKiB,OAAL,CAAaa,YFJNpC,AIFA8B,MJEM,CEIb,CAAiCA,AENlB,MFMf;AACH,ACwBG,AH5BA,AIFA,UJEI9B,AIFAsB,CD8BCgC,GH5BL,AIFQ,EJEE,CG4BV,AC9BWR,CD8BCF,MAAZ,CC9BmB,CAACuB,cAAT,CAAwB,aAAxB,CAAX;AD+BA,AH5BI,AIFJ,UAAI9E,CD8BCkE,CH5BGtD,EIFA,CD8BR,EC9BWqB,IAAI,CAACyD,IJEM,CIFtB,EJEyB7E,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BJ,IAAI,CAACT,EAAjC,CAArB;AG8BP,AC/BG,UAAIe,OAAO,GAAGwB,MAAM,CAACU,OAAP,CAAewC,MAA7B;AJEI,AIDJ,UAAIhF,EJCIC,EIDA,GAAG,KAAK6D,IJCZ,EAAoB,CIDb,CAAagB,CFKjBhD,MELI,CAAqBxB,CFKjB,MELJ,CAAX;AFMA,AFJQJ,AIDRF,MAAAA,IJCQE,AIDJ,CFKCqB,AELAlC,IAAL,CJCc,CAACc,CEIf,AELYd,CFKCgD,GELb,OFKA,AFJQ,CEIgBP,AFJIzB,MEI5B,CFJQ,CAA4BL,IAAI,CAACT,EAAjC,EAAqCS,IAArC;AEKX,AFJW,AIDR,WAAK8D,MJCU,CIDf,CAAa9B,EJCL,MG6BL,EC9BH,CAAwBhC,IAAxB;AD+BA,AH7BK,AIDL,WD8BK2C,AC9BAsB,KD8BL,CAAWjB,MC9BX,GD8BA,CAAqBC,GAArB,CAAyB,MAAzB;AACH,AH7BI,AIDD,WAAKc,UAAL,CAAgBkB,KAAhB;AACH,4BFIO3C,OAAO;AACX,AFJA,UEIIC,GFJG,GEIG,EFJV,CEIaD,KAAK,CAACR,MAAN,CAAaU,OAAb,CAAqBC,YAAlC;AFHH,4BG4BO;ADxBJ,ACyBA,UDzBIF,CCyBCI,KDzBL,ACyBA,CAAWK,CDzBC,QCyBZ,CAAqBQ,GC7Bf1B,GD6BN,CAA4B,IC7Bd,ED6Bd;ADxBI,ACyBJ,AC7BA,UAAI8C,CD6BCnB,EDzBIlB,KCyBT,AC7BY,CFIR,EAAaD,AEJFR,KFIO,CAACA,AEJF,CAAC+C,KFIlB,EEJW,CAAe,OAAf,CAAf;AFKC,ACyBJ,AC7BG,UAAIvE,OAAO,GAAGsE,QAAQ,CAACrF,EAAvB,GJAU;AEKb,AFJG,AIAA,UJAIkB,AIAAT,IAAI,CJAC,EIAE,CJAC,EAAZ,EIAgB8D,OAAL,CAAagB,OAAb,CAAqBxE,OAArB,CAAX;AACAN,MAAAA,IAAI,CAACV,OAAL,GAAewC,MAAM,CAACoD,OAAtB;AJAA,AICA,WJDK,AICApB,IJDIpD,CAAC,EICV,CJDa,AICAsB,CJDb,EAAgBtB,CAAC,GAAGR,GICpB,CD2BM,AC3BkBF,EJDE,CAACG,CIC3B,WJDoB,CAAoBQ,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AG6BrDoC,AH5BI,AICJ,MD2BAA,KC3BKmB,CJDGrD,EG4BA,CAAC8C,AH5BE,GAAGxD,KICd,CJDoB,CAACC,GG4BrB,CAAuB,QAAvB,AH5Bc,CAAoBS,CG4BD4C,EH5BnB,CAAwB9C,CAAxB,CAAV,CG4BJ;AACH,AH5BO,AICJ,WAAKqD,CJDGlE,QAAQ,CIChB,CAAgBoF,CJDG/E,IICnB,EJDyB,CAACC,YAAP,CAAoBC,OAApB,CAA4BQ,GAA5B,CAAf;AACAH,AICP,QJDOA,KAAK,CAACI,IAAN,CAAWzB,cAAKoB,QAAL,CAAcX,QAAd,CAAX;AACH;;AACD,aAAOY,KAAP,iBICW;AJAd,AICG,WAAKsD,UAAL,CAAgBpC,YAAhB;AACH;;4BJAO;AACJzB,MAAAA,MAAM,CAACC,YAAP,CAAoBW,KAApB,EICS;AJAZ,AICG,WAAKiD,UAAL,CAAgBkB,KAAhB;AACH;;;8CAEyB;AACtB,WAAKlB,UAAL,CAAgBoB,kBAAhB;AACH;;;wCAEmBrD,QAAQ;AACxB,UAAI9B,IAAI,GAAG8B,MAAM,CAAC+C,OAAP,CAAe,OAAf,CAAX;AACA,UAAIvE,OAAO,GAAGN,IAAI,CAACT,EAAnB;AACA,WAAKwE,UAAL,CAAgBqB,cAAhB,CAA+B9E,OAA/B;AACH;;;8BAES;AACN,UAAIgB,IAAI,GAAGwB,QAAQ,CAACqB,cAAT,CAAwB,aAAxB,CAAX;AACA,UAAI9E,IAAI,GAAGiC,IAAI,CAACyD,KAAhB;AACA,UAAI/E,IAAI,GAAG,IAAIZ,aAAJ,CAASC,IAAT,EAAe,KAAf,CAAX;AACA,WAAKyE,OAAL,CAAajC,OAAb,CAAqB7B,IAArB;AACA,WAAKiE,YAAL;AACA,WAAKF,UAAL,CAAgBkB,KAAhB;AACH;;;+BAEUnD,QAAQ;AACfuD,MAAAA,OAAO,CAACC,GAAR;AACA,UAAIhF,OAAO,GAAGwB,MAAM,CAACU,OAAP,CAAewC,MAA7B;AACA,WAAKlB,OAAL,CAAayB,UAAb,CAAwBjF,OAAxB;AACA,WAAKyD,UAAL,CAAgBkB,KAAhB;AACA,WAAKhB,YAAL;AACH;;;oCAGe;AACZ,WAAKH,OAAL,CAAahD,KAAb;AACA,WAAKiD,UAAL,CAAgBkB,KAAhB;AACA,WAAKhB,YAAL;AACH","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["export default class Task {\r\n\r\n    constructor(text, isCheck, id) {\r\n        this.text = text;\r\n        this.isCheck = isCheck;\r\n        (id) ? this.id = id: this.id = Date.now();\r\n    }\r\n\r\n    static fromJSON(json) {\r\n        let taskJSON = JSON.parse(json);\r\n        return new Task(taskJSON.text, taskJSON.isCheck, taskJSON.id);\r\n    }\r\n\r\n    toString() {\r\n        return JSON.stringify(this);\r\n    }\r\n}","import Task from \"./Task\";\r\n\r\nexport default class TaskDAO {\r\n\r\n    addTask(task) {\r\n        if (task) {\r\n            let tasksOfStorage = window.localStorage.getItem(task.id);\r\n            if (!tasksOfStorage) {\r\n                window.localStorage.setItem(task.id, task);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    removeTask(task_id) {\r\n        if (task_id) {\r\n            let tasksOfStorage = window.localStorage.getItem(task_id);\r\n            if (tasksOfStorage) {\r\n                window.localStorage.removeItem(task_id);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    getTask(task_id) {\r\n        if (task_id) {\r\n            let tasksOfStorage = window.localStorage.getItem(task_id);\r\n            if (tasksOfStorage) {\r\n                return Task.fromJSON(tasksOfStorage);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    updateTask(task) {\r\n        if (task) {\r\n            let tasksOfStorage = window.localStorage.getItem(task.id);\r\n            if (tasksOfStorage) {\r\n                window.localStorage.setItem(task.id, task);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getAllTasks() {\r\n        let tasks = [];\r\n        for (let i = 0; i < window.localStorage.length; i++) {\r\n            let key = window.localStorage.key(i);\r\n            let taskJSON = window.localStorage.getItem(key);\r\n            tasks.push(Task.fromJSON(taskJSON));\r\n        }\r\n        return tasks;\r\n    }\r\n\r\n    clear() {\r\n        window.localStorage.clear();\r\n    }\r\n}","export default class TaskResder {\r\n\r\n    renderTasks(tasks) {\r\n        if (tasks && Array.isArray(tasks)) {\r\n            let renderedTasks = \"\";\r\n            for (let task of tasks) {\r\n                renderedTasks += this.drawTask(task) + \"\\n\";\r\n            }\r\n            return renderedTasks;\r\n        }\r\n\r\n    }\r\n\r\n    drawTask(task) {\r\n        if (task) {\r\n            let taskTemlate = `<div id=\"${task.id}\" class=\"task\">\r\n            <input type=\"checkbox\" data-button-action=\"check\" title=\"Check it if task is done\"\" ${(task.isCheck)? \"checked\": \"\"}>\r\n            <input type=\"text\" size=\"40\" disabled value=\"${task.text}\">\r\n            <button class=\"task-button\" data-button-action=\"update\" title=\"Edit task\"></button>\r\n            <button class=\"task-button\" data-button-action=\"delete\" title=\"Delete task\"></button>\r\n         </div>`;\r\n            return taskTemlate;\r\n        }\r\n    }\r\n}","export default class ActionManager {\r\n    constructor(elem, service) {\r\n        this.elem = elem;\r\n        this.service = service;\r\n        elem.addEventListener(\"click\", this.onClick.bind(this));\r\n    }\r\n\r\n    add() {\r\n        this.service.openAddModal();\r\n    }\r\n\r\n    closeModal() {\r\n        this.service.closeModal();\r\n    }\r\n\r\n    addTask() {\r\n        this.service.addTask();\r\n\r\n    }\r\n\r\n    update(target) {\r\n        this.service.openUpdateModal(target);\r\n    }\r\n\r\n    updateTask(target) {\r\n        this.service.updateTask(target);\r\n    }\r\n\r\n    check(target) {\r\n        this.service.checkTask(target);\r\n    }\r\n\r\n    clearAll() {\r\n        this.service.openDeleteAllItemsModal();\r\n    }\r\n\r\n    clearAllTasks() {\r\n        this.service.clearTaskList();\r\n\r\n    }\r\n\r\n    delete(target) {\r\n        this.service.openDeleteItemModal(target);\r\n    }\r\n\r\n    deleteTask(target) {\r\n        this.service.deleteTask(target);\r\n    }\r\n\r\n    onClick(event) {\r\n        let action = event.target.dataset.buttonAction;\r\n        if (action) {\r\n            this[action](event.target);\r\n        }\r\n    }\r\n}","export default class ModalFrame {\r\n\r\n    constructor() {\r\n        this.modal;\r\n    }\r\n\r\n    create(option) {\r\n        let modalElem = document.createElement(\"div\");\r\n        modalElem.classList.add(\"modal\");\r\n        modalElem.insertAdjacentHTML(\"afterbegin\", `\r\n    <div class=\"modal-overlay\">\r\n        <div class=\"message-box\">\r\n            <div class=\"cancel-button-box\">\r\n                <button class=\"task-button\" data-button-action=\"closeModal\">&times;</button>\r\n            </div>\r\n            <div class=\"message-box-main\">\r\n                <div class=\" message-box-text \">\r\n            ${option.body}\r\n                </div>\r\n                <div class=\"message-box-buttons \">\r\n                ${option.button}\r\n                    <button class=\"message-button\" data-button-action=\"closeModal\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>  \r\n    `);\r\n        document.body.append(modalElem);\r\n        this.modal = modalElem;\r\n    }\r\n\r\n\r\n    openAddModal() {\r\n        let option = {\r\n            body: \"<p>Enter task message</p><input id='messageText' type='text'>\",\r\n            button: \"<button class='message-button' data-button-action='addTask'>Ok</button>\"\r\n        }\r\n        this.create(option);\r\n        this.open();\r\n    }\r\n\r\n    openUpdateModal(task) {\r\n        let option = {\r\n            body: `<p>Enter new task message</p><input id='messageText' type='text' value=\"${task.text}\">`,\r\n            button: `<button class='message-button' data-button-action='updateTask' data-task-id=\"${task.id}\">Ok</button>`\r\n        }\r\n        this.create(option);\r\n        this.open();\r\n    }\r\n\r\n\r\n\r\n    openDeleteAllItems() {\r\n        let option = {\r\n            body: \"<p>Do you really want to delete all tasks?</p>\",\r\n            button: \"<button class='message-button' data-button-action='clearAllTasks'>Delete</button>\"\r\n        }\r\n        this.create(option);\r\n        this.open();\r\n\r\n    }\r\n\r\n    openDeleteItem(task_id) {\r\n        let option = {\r\n            body: \"<p>Do you really want to delete this tasks</p>\",\r\n            button: `<button class='message-button' data-button-action='deleteTask' data-task-id='${task_id}'>Delete</button>`\r\n        }\r\n        this.create(option);\r\n        this.open();\r\n\r\n    }\r\n\r\n    open() {\r\n        this.modal.classList.add(\"open\");\r\n    }\r\n    close() {\r\n        this.modal.classList.remove(\"open\");\r\n        this.destroy();\r\n    }\r\n    destroy() {\r\n        document.querySelector(\".modal\").remove();\r\n    }\r\n}","import TaskDAO from \"./TaskDAO.js\"\r\nimport TaskRender from \"./TaskRender.js\"\r\nimport ActionManager from \"./ActionManager.js\"\r\nimport ModalFrame from \"./ModalFrame.js\"\r\nimport Task from \"./Task.js\";\r\n\r\nexport default class TaskService {\r\n\r\n    constructor() {\r\n        this.taskRender = new TaskRender();\r\n        this.taskDAO = new TaskDAO();\r\n        this.modalFrame = new ModalFrame();\r\n    }\r\n\r\n    start() {\r\n        this.actionManager = new ActionManager(document.body, this);\r\n        this.taskDAO.clear();\r\n        this.drawAllTasks();\r\n    }\r\n\r\n    drawAllTasks() {\r\n        let tasksHomeElement = document.getElementById(\"tasks\");\r\n        let tasks = this.taskDAO.getAllTasks();\r\n        tasks.sort((a, b) => a.id - b.id);\r\n        let renderedTasks = this.taskRender.renderTasks(tasks);\r\n        document.querySelectorAll(\".task\").forEach((x) => x.remove());\r\n        tasksHomeElement.insertAdjacentHTML(\"afterbegin\", renderedTasks);\r\n    }\r\n\r\n    openUpdateModal(target) {\r\n        let taskElem = target.closest(\".task\");\r\n        let task_id = taskElem.id;\r\n        let task = this.taskDAO.getTask(task_id);\r\n        this.modalFrame.openUpdateModal(task);\r\n    }\r\n\r\n    updateTask(target) {\r\n        let elem = document.getElementById(\"messageText\");\r\n        let text = elem.value;\r\n        let task_id = target.dataset.taskId;\r\n        let task = this.taskDAO.getTask(task_id);\r\n        task.text = text;\r\n        this.taskDAO.updateTask(task);\r\n        this.drawAllTasks();\r\n        this.modalFrame.close();\r\n    }\r\n\r\n    checkTask(target) {\r\n        let taskElem = target.closest(\".task\");\r\n        let task_id = taskElem.id;\r\n        let task = this.taskDAO.getTask(task_id);\r\n        task.isCheck = target.checked;\r\n        this.taskDAO.updateTask(task);\r\n        this.drawAllTasks();\r\n        this.modalFrame.close();\r\n    }\r\n\r\n    openAddModal() {\r\n        this.modalFrame.openAddModal();\r\n    }\r\n\r\n    closeModal() {\r\n        this.modalFrame.close();\r\n    }\r\n\r\n    openDeleteAllItemsModal() {\r\n        this.modalFrame.openDeleteAllItems();\r\n    }\r\n\r\n    openDeleteItemModal(target) {\r\n        let task = target.closest(\".task\");\r\n        let task_id = task.id;\r\n        this.modalFrame.openDeleteItem(task_id);\r\n    }\r\n\r\n    addTask() {\r\n        let elem = document.getElementById(\"messageText\");\r\n        let text = elem.value;\r\n        let task = new Task(text, false);\r\n        this.taskDAO.addTask(task);\r\n        this.drawAllTasks();\r\n        this.modalFrame.close();\r\n    }\r\n\r\n    deleteTask(target) {\r\n        console.log();\r\n        let task_id = target.dataset.taskId;\r\n        this.taskDAO.removeTask(task_id);\r\n        this.modalFrame.close();\r\n        this.drawAllTasks();\r\n    }\r\n\r\n\r\n    clearTaskList() {\r\n        this.taskDAO.clear();\r\n        this.modalFrame.close();\r\n        this.drawAllTasks();\r\n    }\r\n\r\n}","import TaskService from \"./TaskService.js\"\n\nlet taskService = new TaskService();\ntaskService.start();"]}